use crate::solutions::prelude::*;

pub fn problem1<'a>(input: &'a str) -> Result<String, anyhow::Error> {
    //let data = parser::parse(input).map_err(|x| x.to_owned()).context("failed to parse input")?;
    todo!()
}

pub fn problem2(_input: &str) -> Result<String, anyhow::Error> {
    todo!()
}

mod parser {
    use crate::parser::prelude::*;

    pub fn parse(input: &str) -> IResult<&str, ()> {
        unimplemented!()
    }
}

#[cfg(test)]
mod tests {
    use super::*;

    const EXAMPLE_INPUT: &str = "";

    #[test]
    fn problem1_test() {
        assert_eq!(problem1(EXAMPLE_INPUT).unwrap(), "")
    }

    #[test]
    fn problem2_test() {
        //assert_eq!(problem2(EXAMPLE_INPUT).unwrap(), "")
    }
}
